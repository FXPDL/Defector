

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Aug 01 19:43:59 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0007                     	;# 
    27  0008                     	;# 
    28  0009                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000E                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  008C                     	;# 
    46  008E                     	;# 
    47  0091                     	;# 
    48  0092                     	;# 
    49  0093                     	;# 
    50  0095                     	;# 
    51  0096                     	;# 
    52  0097                     	;# 
    53  0099                     	;# 
    54  009A                     	;# 
    55  009B                     	;# 
    56  009B                     	;# 
    57  009C                     	;# 
    58  009D                     	;# 
    59  009E                     	;# 
    60  009F                     	;# 
    61  010C                     	;# 
    62  010E                     	;# 
    63  0111                     	;# 
    64  0112                     	;# 
    65  0113                     	;# 
    66  0114                     	;# 
    67  0115                     	;# 
    68  0116                     	;# 
    69  0117                     	;# 
    70  0118                     	;# 
    71  0119                     	;# 
    72  011D                     	;# 
    73  018C                     	;# 
    74  018E                     	;# 
    75  0191                     	;# 
    76  0191                     	;# 
    77  0192                     	;# 
    78  0193                     	;# 
    79  0193                     	;# 
    80  0194                     	;# 
    81  0195                     	;# 
    82  0196                     	;# 
    83  0197                     	;# 
    84  020C                     	;# 
    85  0211                     	;# 
    86  0211                     	;# 
    87  0212                     	;# 
    88  0212                     	;# 
    89  0213                     	;# 
    90  0213                     	;# 
    91  0214                     	;# 
    92  0214                     	;# 
    93  0215                     	;# 
    94  0215                     	;# 
    95  0215                     	;# 
    96  0216                     	;# 
    97  0216                     	;# 
    98  0217                     	;# 
    99  0217                     	;# 
   100  0391                     	;# 
   101  0392                     	;# 
   102  0393                     	;# 
   103  0498                     	;# 
   104  0498                     	;# 
   105  0499                     	;# 
   106  049A                     	;# 
   107  049B                     	;# 
   108  049B                     	;# 
   109  049C                     	;# 
   110  049D                     	;# 
   111  049E                     	;# 
   112  049F                     	;# 
   113  0611                     	;# 
   114  0612                     	;# 
   115  0613                     	;# 
   116  0613                     	;# 
   117  0614                     	;# 
   118  0615                     	;# 
   119  0616                     	;# 
   120  0616                     	;# 
   121  0617                     	;# 
   122  0618                     	;# 
   123  0619                     	;# 
   124  0619                     	;# 
   125  061A                     	;# 
   126  061B                     	;# 
   127  061C                     	;# 
   128  061C                     	;# 
   129  0691                     	;# 
   130  0692                     	;# 
   131  0693                     	;# 
   132  0694                     	;# 
   133  0695                     	;# 
   134  0F0F                     	;# 
   135  0F10                     	;# 
   136  0F11                     	;# 
   137  0F12                     	;# 
   138  0F13                     	;# 
   139  0F14                     	;# 
   140  0F15                     	;# 
   141  0F16                     	;# 
   142  0F17                     	;# 
   143  0F18                     	;# 
   144  0F19                     	;# 
   145  0F1A                     	;# 
   146  0F1B                     	;# 
   147  0F1C                     	;# 
   148  0F1D                     	;# 
   149  0F1E                     	;# 
   150  0F1F                     	;# 
   151  0FE3                     	;# 
   152  0FE4                     	;# 
   153  0FE5                     	;# 
   154  0FE6                     	;# 
   155  0FE7                     	;# 
   156  0FE8                     	;# 
   157  0FE9                     	;# 
   158  0FEA                     	;# 
   159  0FEB                     	;# 
   160  0FED                     	;# 
   161  0FEE                     	;# 
   162  0FEF                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000E                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  008C                     	;# 
   190  008E                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  010C                     	;# 
   206  010E                     	;# 
   207  0111                     	;# 
   208  0112                     	;# 
   209  0113                     	;# 
   210  0114                     	;# 
   211  0115                     	;# 
   212  0116                     	;# 
   213  0117                     	;# 
   214  0118                     	;# 
   215  0119                     	;# 
   216  011D                     	;# 
   217  018C                     	;# 
   218  018E                     	;# 
   219  0191                     	;# 
   220  0191                     	;# 
   221  0192                     	;# 
   222  0193                     	;# 
   223  0193                     	;# 
   224  0194                     	;# 
   225  0195                     	;# 
   226  0196                     	;# 
   227  0197                     	;# 
   228  020C                     	;# 
   229  0211                     	;# 
   230  0211                     	;# 
   231  0212                     	;# 
   232  0212                     	;# 
   233  0213                     	;# 
   234  0213                     	;# 
   235  0214                     	;# 
   236  0214                     	;# 
   237  0215                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0216                     	;# 
   241  0216                     	;# 
   242  0217                     	;# 
   243  0217                     	;# 
   244  0391                     	;# 
   245  0392                     	;# 
   246  0393                     	;# 
   247  0498                     	;# 
   248  0498                     	;# 
   249  0499                     	;# 
   250  049A                     	;# 
   251  049B                     	;# 
   252  049B                     	;# 
   253  049C                     	;# 
   254  049D                     	;# 
   255  049E                     	;# 
   256  049F                     	;# 
   257  0611                     	;# 
   258  0612                     	;# 
   259  0613                     	;# 
   260  0613                     	;# 
   261  0614                     	;# 
   262  0615                     	;# 
   263  0616                     	;# 
   264  0616                     	;# 
   265  0617                     	;# 
   266  0618                     	;# 
   267  0619                     	;# 
   268  0619                     	;# 
   269  061A                     	;# 
   270  061B                     	;# 
   271  061C                     	;# 
   272  061C                     	;# 
   273  0691                     	;# 
   274  0692                     	;# 
   275  0693                     	;# 
   276  0694                     	;# 
   277  0695                     	;# 
   278  0F0F                     	;# 
   279  0F10                     	;# 
   280  0F11                     	;# 
   281  0F12                     	;# 
   282  0F13                     	;# 
   283  0F14                     	;# 
   284  0F15                     	;# 
   285  0F16                     	;# 
   286  0F17                     	;# 
   287  0F18                     	;# 
   288  0F19                     	;# 
   289  0F1A                     	;# 
   290  0F1B                     	;# 
   291  0F1C                     	;# 
   292  0F1D                     	;# 
   293  0F1E                     	;# 
   294  0F1F                     	;# 
   295  0FE3                     	;# 
   296  0FE4                     	;# 
   297  0FE5                     	;# 
   298  0FE6                     	;# 
   299  0FE7                     	;# 
   300  0FE8                     	;# 
   301  0FE9                     	;# 
   302  0FEA                     	;# 
   303  0FEB                     	;# 
   304  0FED                     	;# 
   305  0FEE                     	;# 
   306  0FEF                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000E                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  008C                     	;# 
   334  008E                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  010C                     	;# 
   350  010E                     	;# 
   351  0111                     	;# 
   352  0112                     	;# 
   353  0113                     	;# 
   354  0114                     	;# 
   355  0115                     	;# 
   356  0116                     	;# 
   357  0117                     	;# 
   358  0118                     	;# 
   359  0119                     	;# 
   360  011D                     	;# 
   361  018C                     	;# 
   362  018E                     	;# 
   363  0191                     	;# 
   364  0191                     	;# 
   365  0192                     	;# 
   366  0193                     	;# 
   367  0193                     	;# 
   368  0194                     	;# 
   369  0195                     	;# 
   370  0196                     	;# 
   371  0197                     	;# 
   372  020C                     	;# 
   373  0211                     	;# 
   374  0211                     	;# 
   375  0212                     	;# 
   376  0212                     	;# 
   377  0213                     	;# 
   378  0213                     	;# 
   379  0214                     	;# 
   380  0214                     	;# 
   381  0215                     	;# 
   382  0215                     	;# 
   383  0215                     	;# 
   384  0216                     	;# 
   385  0216                     	;# 
   386  0217                     	;# 
   387  0217                     	;# 
   388  0391                     	;# 
   389  0392                     	;# 
   390  0393                     	;# 
   391  0498                     	;# 
   392  0498                     	;# 
   393  0499                     	;# 
   394  049A                     	;# 
   395  049B                     	;# 
   396  049B                     	;# 
   397  049C                     	;# 
   398  049D                     	;# 
   399  049E                     	;# 
   400  049F                     	;# 
   401  0611                     	;# 
   402  0612                     	;# 
   403  0613                     	;# 
   404  0613                     	;# 
   405  0614                     	;# 
   406  0615                     	;# 
   407  0616                     	;# 
   408  0616                     	;# 
   409  0617                     	;# 
   410  0618                     	;# 
   411  0619                     	;# 
   412  0619                     	;# 
   413  061A                     	;# 
   414  061B                     	;# 
   415  061C                     	;# 
   416  061C                     	;# 
   417  0691                     	;# 
   418  0692                     	;# 
   419  0693                     	;# 
   420  0694                     	;# 
   421  0695                     	;# 
   422  0F0F                     	;# 
   423  0F10                     	;# 
   424  0F11                     	;# 
   425  0F12                     	;# 
   426  0F13                     	;# 
   427  0F14                     	;# 
   428  0F15                     	;# 
   429  0F16                     	;# 
   430  0F17                     	;# 
   431  0F18                     	;# 
   432  0F19                     	;# 
   433  0F1A                     	;# 
   434  0F1B                     	;# 
   435  0F1C                     	;# 
   436  0F1D                     	;# 
   437  0F1E                     	;# 
   438  0F1F                     	;# 
   439  0FE3                     	;# 
   440  0FE4                     	;# 
   441  0FE5                     	;# 
   442  0FE6                     	;# 
   443  0FE7                     	;# 
   444  0FE8                     	;# 
   445  0FE9                     	;# 
   446  0FEA                     	;# 
   447  0FEB                     	;# 
   448  0FED                     	;# 
   449  0FEE                     	;# 
   450  0FEF                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0008                     	;# 
   460  0009                     	;# 
   461  000A                     	;# 
   462  000B                     	;# 
   463  000C                     	;# 
   464  000E                     	;# 
   465  0011                     	;# 
   466  0012                     	;# 
   467  0013                     	;# 
   468  0015                     	;# 
   469  0016                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001C                     	;# 
   477  008C                     	;# 
   478  008E                     	;# 
   479  0091                     	;# 
   480  0092                     	;# 
   481  0093                     	;# 
   482  0095                     	;# 
   483  0096                     	;# 
   484  0097                     	;# 
   485  0099                     	;# 
   486  009A                     	;# 
   487  009B                     	;# 
   488  009B                     	;# 
   489  009C                     	;# 
   490  009D                     	;# 
   491  009E                     	;# 
   492  009F                     	;# 
   493  010C                     	;# 
   494  010E                     	;# 
   495  0111                     	;# 
   496  0112                     	;# 
   497  0113                     	;# 
   498  0114                     	;# 
   499  0115                     	;# 
   500  0116                     	;# 
   501  0117                     	;# 
   502  0118                     	;# 
   503  0119                     	;# 
   504  011D                     	;# 
   505  018C                     	;# 
   506  018E                     	;# 
   507  0191                     	;# 
   508  0191                     	;# 
   509  0192                     	;# 
   510  0193                     	;# 
   511  0193                     	;# 
   512  0194                     	;# 
   513  0195                     	;# 
   514  0196                     	;# 
   515  0197                     	;# 
   516  020C                     	;# 
   517  0211                     	;# 
   518  0211                     	;# 
   519  0212                     	;# 
   520  0212                     	;# 
   521  0213                     	;# 
   522  0213                     	;# 
   523  0214                     	;# 
   524  0214                     	;# 
   525  0215                     	;# 
   526  0215                     	;# 
   527  0215                     	;# 
   528  0216                     	;# 
   529  0216                     	;# 
   530  0217                     	;# 
   531  0217                     	;# 
   532  0391                     	;# 
   533  0392                     	;# 
   534  0393                     	;# 
   535  0498                     	;# 
   536  0498                     	;# 
   537  0499                     	;# 
   538  049A                     	;# 
   539  049B                     	;# 
   540  049B                     	;# 
   541  049C                     	;# 
   542  049D                     	;# 
   543  049E                     	;# 
   544  049F                     	;# 
   545  0611                     	;# 
   546  0612                     	;# 
   547  0613                     	;# 
   548  0613                     	;# 
   549  0614                     	;# 
   550  0615                     	;# 
   551  0616                     	;# 
   552  0616                     	;# 
   553  0617                     	;# 
   554  0618                     	;# 
   555  0619                     	;# 
   556  0619                     	;# 
   557  061A                     	;# 
   558  061B                     	;# 
   559  061C                     	;# 
   560  061C                     	;# 
   561  0691                     	;# 
   562  0692                     	;# 
   563  0693                     	;# 
   564  0694                     	;# 
   565  0695                     	;# 
   566  0F0F                     	;# 
   567  0F10                     	;# 
   568  0F11                     	;# 
   569  0F12                     	;# 
   570  0F13                     	;# 
   571  0F14                     	;# 
   572  0F15                     	;# 
   573  0F16                     	;# 
   574  0F17                     	;# 
   575  0F18                     	;# 
   576  0F19                     	;# 
   577  0F1A                     	;# 
   578  0F1B                     	;# 
   579  0F1C                     	;# 
   580  0F1D                     	;# 
   581  0F1E                     	;# 
   582  0F1F                     	;# 
   583  0FE3                     	;# 
   584  0FE4                     	;# 
   585  0FE5                     	;# 
   586  0FE6                     	;# 
   587  0FE7                     	;# 
   588  0FE8                     	;# 
   589  0FE9                     	;# 
   590  0FEA                     	;# 
   591  0FEB                     	;# 
   592  0FED                     	;# 
   593  0FEE                     	;# 
   594  0FEF                     	;# 
   595  0000                     	;# 
   596  0001                     	;# 
   597  0002                     	;# 
   598  0003                     	;# 
   599  0004                     	;# 
   600  0005                     	;# 
   601  0006                     	;# 
   602  0007                     	;# 
   603  0008                     	;# 
   604  0009                     	;# 
   605  000A                     	;# 
   606  000B                     	;# 
   607  000C                     	;# 
   608  000E                     	;# 
   609  0011                     	;# 
   610  0012                     	;# 
   611  0013                     	;# 
   612  0015                     	;# 
   613  0016                     	;# 
   614  0016                     	;# 
   615  0017                     	;# 
   616  0018                     	;# 
   617  0019                     	;# 
   618  001A                     	;# 
   619  001B                     	;# 
   620  001C                     	;# 
   621  008C                     	;# 
   622  008E                     	;# 
   623  0091                     	;# 
   624  0092                     	;# 
   625  0093                     	;# 
   626  0095                     	;# 
   627  0096                     	;# 
   628  0097                     	;# 
   629  0099                     	;# 
   630  009A                     	;# 
   631  009B                     	;# 
   632  009B                     	;# 
   633  009C                     	;# 
   634  009D                     	;# 
   635  009E                     	;# 
   636  009F                     	;# 
   637  010C                     	;# 
   638  010E                     	;# 
   639  0111                     	;# 
   640  0112                     	;# 
   641  0113                     	;# 
   642  0114                     	;# 
   643  0115                     	;# 
   644  0116                     	;# 
   645  0117                     	;# 
   646  0118                     	;# 
   647  0119                     	;# 
   648  011D                     	;# 
   649  018C                     	;# 
   650  018E                     	;# 
   651  0191                     	;# 
   652  0191                     	;# 
   653  0192                     	;# 
   654  0193                     	;# 
   655  0193                     	;# 
   656  0194                     	;# 
   657  0195                     	;# 
   658  0196                     	;# 
   659  0197                     	;# 
   660  020C                     	;# 
   661  0211                     	;# 
   662  0211                     	;# 
   663  0212                     	;# 
   664  0212                     	;# 
   665  0213                     	;# 
   666  0213                     	;# 
   667  0214                     	;# 
   668  0214                     	;# 
   669  0215                     	;# 
   670  0215                     	;# 
   671  0215                     	;# 
   672  0216                     	;# 
   673  0216                     	;# 
   674  0217                     	;# 
   675  0217                     	;# 
   676  0391                     	;# 
   677  0392                     	;# 
   678  0393                     	;# 
   679  0498                     	;# 
   680  0498                     	;# 
   681  0499                     	;# 
   682  049A                     	;# 
   683  049B                     	;# 
   684  049B                     	;# 
   685  049C                     	;# 
   686  049D                     	;# 
   687  049E                     	;# 
   688  049F                     	;# 
   689  0611                     	;# 
   690  0612                     	;# 
   691  0613                     	;# 
   692  0613                     	;# 
   693  0614                     	;# 
   694  0615                     	;# 
   695  0616                     	;# 
   696  0616                     	;# 
   697  0617                     	;# 
   698  0618                     	;# 
   699  0619                     	;# 
   700  0619                     	;# 
   701  061A                     	;# 
   702  061B                     	;# 
   703  061C                     	;# 
   704  061C                     	;# 
   705  0691                     	;# 
   706  0692                     	;# 
   707  0693                     	;# 
   708  0694                     	;# 
   709  0695                     	;# 
   710  0F0F                     	;# 
   711  0F10                     	;# 
   712  0F11                     	;# 
   713  0F12                     	;# 
   714  0F13                     	;# 
   715  0F14                     	;# 
   716  0F15                     	;# 
   717  0F16                     	;# 
   718  0F17                     	;# 
   719  0F18                     	;# 
   720  0F19                     	;# 
   721  0F1A                     	;# 
   722  0F1B                     	;# 
   723  0F1C                     	;# 
   724  0F1D                     	;# 
   725  0F1E                     	;# 
   726  0F1F                     	;# 
   727  0FE3                     	;# 
   728  0FE4                     	;# 
   729  0FE5                     	;# 
   730  0FE6                     	;# 
   731  0FE7                     	;# 
   732  0FE8                     	;# 
   733  0FE9                     	;# 
   734  0FEA                     	;# 
   735  0FEB                     	;# 
   736  0FED                     	;# 
   737  0FEE                     	;# 
   738  0FEF                     	;# 
   739  0000                     	;# 
   740  0001                     	;# 
   741  0002                     	;# 
   742  0003                     	;# 
   743  0004                     	;# 
   744  0005                     	;# 
   745  0006                     	;# 
   746  0007                     	;# 
   747  0008                     	;# 
   748  0009                     	;# 
   749  000A                     	;# 
   750  000B                     	;# 
   751  000C                     	;# 
   752  000E                     	;# 
   753  0011                     	;# 
   754  0012                     	;# 
   755  0013                     	;# 
   756  0015                     	;# 
   757  0016                     	;# 
   758  0016                     	;# 
   759  0017                     	;# 
   760  0018                     	;# 
   761  0019                     	;# 
   762  001A                     	;# 
   763  001B                     	;# 
   764  001C                     	;# 
   765  008C                     	;# 
   766  008E                     	;# 
   767  0091                     	;# 
   768  0092                     	;# 
   769  0093                     	;# 
   770  0095                     	;# 
   771  0096                     	;# 
   772  0097                     	;# 
   773  0099                     	;# 
   774  009A                     	;# 
   775  009B                     	;# 
   776  009B                     	;# 
   777  009C                     	;# 
   778  009D                     	;# 
   779  009E                     	;# 
   780  009F                     	;# 
   781  010C                     	;# 
   782  010E                     	;# 
   783  0111                     	;# 
   784  0112                     	;# 
   785  0113                     	;# 
   786  0114                     	;# 
   787  0115                     	;# 
   788  0116                     	;# 
   789  0117                     	;# 
   790  0118                     	;# 
   791  0119                     	;# 
   792  011D                     	;# 
   793  018C                     	;# 
   794  018E                     	;# 
   795  0191                     	;# 
   796  0191                     	;# 
   797  0192                     	;# 
   798  0193                     	;# 
   799  0193                     	;# 
   800  0194                     	;# 
   801  0195                     	;# 
   802  0196                     	;# 
   803  0197                     	;# 
   804  020C                     	;# 
   805  0211                     	;# 
   806  0211                     	;# 
   807  0212                     	;# 
   808  0212                     	;# 
   809  0213                     	;# 
   810  0213                     	;# 
   811  0214                     	;# 
   812  0214                     	;# 
   813  0215                     	;# 
   814  0215                     	;# 
   815  0215                     	;# 
   816  0216                     	;# 
   817  0216                     	;# 
   818  0217                     	;# 
   819  0217                     	;# 
   820  0391                     	;# 
   821  0392                     	;# 
   822  0393                     	;# 
   823  0498                     	;# 
   824  0498                     	;# 
   825  0499                     	;# 
   826  049A                     	;# 
   827  049B                     	;# 
   828  049B                     	;# 
   829  049C                     	;# 
   830  049D                     	;# 
   831  049E                     	;# 
   832  049F                     	;# 
   833  0611                     	;# 
   834  0612                     	;# 
   835  0613                     	;# 
   836  0613                     	;# 
   837  0614                     	;# 
   838  0615                     	;# 
   839  0616                     	;# 
   840  0616                     	;# 
   841  0617                     	;# 
   842  0618                     	;# 
   843  0619                     	;# 
   844  0619                     	;# 
   845  061A                     	;# 
   846  061B                     	;# 
   847  061C                     	;# 
   848  061C                     	;# 
   849  0691                     	;# 
   850  0692                     	;# 
   851  0693                     	;# 
   852  0694                     	;# 
   853  0695                     	;# 
   854  0F0F                     	;# 
   855  0F10                     	;# 
   856  0F11                     	;# 
   857  0F12                     	;# 
   858  0F13                     	;# 
   859  0F14                     	;# 
   860  0F15                     	;# 
   861  0F16                     	;# 
   862  0F17                     	;# 
   863  0F18                     	;# 
   864  0F19                     	;# 
   865  0F1A                     	;# 
   866  0F1B                     	;# 
   867  0F1C                     	;# 
   868  0F1D                     	;# 
   869  0F1E                     	;# 
   870  0F1F                     	;# 
   871  0FE3                     	;# 
   872  0FE4                     	;# 
   873  0FE5                     	;# 
   874  0FE6                     	;# 
   875  0FE7                     	;# 
   876  0FE8                     	;# 
   877  0FE9                     	;# 
   878  0FEA                     	;# 
   879  0FEB                     	;# 
   880  0FED                     	;# 
   881  0FEE                     	;# 
   882  0FEF                     	;# 
   883                           
   884                           	psect	idataCOMMON
   885  01A8                     __pidataCOMMON:	
   886                           
   887                           ;initializer for _debounce_limit
   888  01A8  3419               	retlw	25
   889  01A9  3400               	retlw	0
   890                           
   891                           	psect	idataBANK0
   892  0197                     __pidataBANK0:	
   893                           
   894                           ;initializer for _boost_up
   895  0197  3401               	retlw	1
   896  0198  3400               	retlw	0
   897                           
   898                           ;initializer for _fuzz_up
   899  0199  3401               	retlw	1
   900  019A  3400               	retlw	0
   901                           
   902                           ;initializer for _long_press_limit
   903  019B  3400               	retlw	0
   904  019C  342D               	retlw	45
   905  000B                     _INTCONbits	set	11
   906  0011                     _PIR1bits	set	17
   907  000C                     _PORTAbits	set	12
   908  001C                     _T2CONbits	set	28
   909  009D                     _ADCON0bits	set	157
   910  009E                     _ADCON1bits	set	158
   911  009C                     _ADRESH	set	156
   912  009B                     _ADRESL	set	155
   913  0099                     _OSCCONbits	set	153
   914  009A                     _OSCSTAT	set	154
   915  008C                     _TRISAbits	set	140
   916  008E                     _TRISCbits	set	142
   917  010C                     _LATAbits	set	268
   918  010E                     _LATCbits	set	270
   919  018C                     _ANSELAbits	set	396
   920  0192                     _PMADRH	set	402
   921  0191                     _PMADRL	set	401
   922  0195                     _PMCON1bits	set	405
   923  0196                     _PMCON2	set	406
   924  0194                     _PMDATH	set	404
   925  0193                     _PMDATL	set	403
   926                           
   927                           ; #config settings
   928  0000                     
   929                           	psect	cinit
   930  000E                     start_initialization:	
   931  000E                     __initialization:	
   932                           
   933                           ; Clear objects allocated to COMMON
   934  000E  3070               	movlw	low __pbssCOMMON
   935  000F  0084               	movwf	4
   936  0010  3000               	movlw	high __pbssCOMMON
   937  0011  0085               	movwf	5
   938  0012  3008               	movlw	8
   939  0013  219D               	fcall	clear_ram0
   940                           
   941                           ; Clear objects allocated to BANK0
   942  0014  3020               	movlw	low __pbssBANK0
   943  0015  0084               	movwf	4
   944  0016  3000               	movlw	high __pbssBANK0
   945  0017  0085               	movwf	5
   946  0018  3016               	movlw	22
   947  0019  219D               	fcall	clear_ram0
   948                           
   949                           ; Initialize objects allocated to COMMON
   950  001A  21A8               	fcall	__pidataCOMMON	;fetch initializer
   951  001B  00FB               	movwf	__pdataCOMMON& (0+127)
   952  001C  21A9               	fcall	__pidataCOMMON+1	;fetch initializer
   953  001D  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   954                           
   955                           ; Initialize objects allocated to BANK0
   956  001E  3097               	movlw	low __pidataBANK0
   957  001F  0084               	movwf	4
   958  0020  3081               	movlw	(high __pidataBANK0)| (0+128)
   959  0021  0085               	movwf	5
   960  0022  0012               	moviw fsr0++
   961  0023  00B6               	movwf	__pdataBANK0& (0+127)
   962  0024  0012               	moviw fsr0++
   963  0025  00B7               	movwf	(__pdataBANK0+1)& (0+127)
   964  0026  0012               	moviw fsr0++
   965  0027  00B8               	movwf	(__pdataBANK0+2)& (0+127)
   966  0028  0012               	moviw fsr0++
   967  0029  00B9               	movwf	(__pdataBANK0+3)& (0+127)
   968  002A  0012               	moviw fsr0++
   969  002B  00BA               	movwf	(__pdataBANK0+4)& (0+127)
   970  002C  0012               	moviw fsr0++
   971  002D  00BB               	movwf	(__pdataBANK0+5)& (0+127)
   972  002E                     end_of_initialization:	
   973                           ;End of C runtime variable initialization code
   974                           
   975  002E                     __end_of__initialization:	
   976  002E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   977  002F  0020               	movlb	0
   978  0030  2831               	ljmp	_main	;jump to C main() function
   979                           
   980                           	psect	bssCOMMON
   981  0070                     __pbssCOMMON:	
   982  0070                     _boost_pressed:	
   983  0070                     	ds	2
   984  0072                     _boost_state:	
   985  0072                     	ds	2
   986  0074                     _fuzz_pressed:	
   987  0074                     	ds	2
   988  0076                     _fuzz_state:	
   989  0076                     	ds	2
   990                           
   991                           	psect	dataCOMMON
   992  007B                     __pdataCOMMON:	
   993  007B                     _debounce_limit:	
   994  007B                     	ds	2
   995                           
   996                           	psect	bssBANK0
   997  0020                     __pbssBANK0:	
   998  0020                     wait_ms@timel:	
   999  0020                     	ds	4
  1000  0024                     _boost_down:	
  1001  0024                     	ds	2
  1002  0026                     _debounce_count_boost:	
  1003  0026                     	ds	2
  1004  0028                     _debounce_count_fuzz:	
  1005  0028                     	ds	2
  1006  002A                     _feedback_on:	
  1007  002A                     	ds	2
  1008  002C                     _feedback_state:	
  1009  002C                     	ds	2
  1010  002E                     _fuzz_down:	
  1011  002E                     	ds	2
  1012  0030                     _fuzz_toggle:	
  1013  0030                     	ds	2
  1014  0032                     _fuzz_turning_on:	
  1015  0032                     	ds	2
  1016  0034                     _last_boost_state:	
  1017  0034                     	ds	2
  1018                           
  1019                           	psect	dataBANK0
  1020  0036                     __pdataBANK0:	
  1021  0036                     _boost_up:	
  1022  0036                     	ds	2
  1023  0038                     _fuzz_up:	
  1024  0038                     	ds	2
  1025  003A                     _long_press_limit:	
  1026  003A                     	ds	2
  1027                           
  1028                           	psect	clrtext
  1029  019D                     clear_ram0:	
  1030                           ;	Called with FSR0 containing the base address, and
  1031                           ;	WREG with the size to clear
  1032                           
  1033  019D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1034  019E                     clrloop0:	
  1035  019E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1036  019F  3101               	addfsr 0,1
  1037  01A0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1038  01A1  299E               	goto	clrloop0	;have we reached the end yet?
  1039  01A2  3400               	retlw	0	;all done for this memory range, return
  1040                           
  1041                           	psect	cstackCOMMON
  1042  0078                     __pcstackCOMMON:	
  1043  0078                     ?_ConfigureOscillator:	
  1044  0078                     ?_InitApp:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0078                     ?_init_adc:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0078                     ?_isr:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053  0078                     ??_isr:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0078                     ?_main:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059                           
  1060                           ; 1 bytes @ 0x0
  1061  0078                     	ds	1
  1062  0079                     ??_ConfigureOscillator:	
  1063  0079                     ??_InitApp:	
  1064                           ; 1 bytes @ 0x1
  1065                           
  1066  0079                     ??_init_adc:	
  1067                           ; 1 bytes @ 0x1
  1068                           
  1069  0079                     ??_main:	
  1070                           ; 1 bytes @ 0x1
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0x1
  1074  0079                     	ds	2
  1075                           
  1076                           	psect	maintext
  1077  0031                     __pmaintext:	
  1078 ;;
  1079 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1080 ;;
  1081 ;; *************** function _main *****************
  1082 ;; Defined at:
  1083 ;;		line 61 in file "main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0, pclath, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : B1F/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1
  1097 ;;      Params:         0       0       0
  1098 ;;      Locals:         0       0       0
  1099 ;;      Temps:          2       0       0
  1100 ;;      Totals:         2       0       0
  1101 ;;Total ram usage:        2 bytes
  1102 ;; Hardware stack levels required when called:    3
  1103 ;; This function calls:
  1104 ;;		_ConfigureOscillator
  1105 ;;		_InitApp
  1106 ;; This function is called by:
  1107 ;;		Startup code after reset
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _main
  1113  0031                     _main:	
  1114                           
  1115                           ;main.c: 62: ConfigureOscillator();
  1116                           
  1117                           ;incstack = 0
  1118                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1119  0031  21A3               	fcall	_ConfigureOscillator
  1120                           
  1121                           ;main.c: 63: InitApp();
  1122  0032  217C               	fcall	_InitApp
  1123                           
  1124                           ;main.c: 65: LATCbits.LATC4 = 0;
  1125  0033  0022               	movlb	2	; select bank2
  1126  0034  120E               	bcf	14,4	;volatile
  1127                           
  1128                           ;main.c: 66: LATCbits.LATC0 = 0;
  1129  0035  100E               	bcf	14,0	;volatile
  1130                           
  1131                           ;main.c: 67: LATCbits.LATC1 = 0;
  1132  0036  108E               	bcf	14,1	;volatile
  1133                           
  1134                           ;main.c: 68: LATCbits.LATC2 = 0;
  1135  0037  110E               	bcf	14,2	;volatile
  1136                           
  1137                           ;main.c: 71: LATCbits.LATC4 = !boost_state;
  1138  0038  0872               	movf	_boost_state,w
  1139  0039  0473               	iorwf	_boost_state+1,w
  1140  003A  1D03               	btfss	3,2
  1141  003B  283F               	goto	u390
  1142  003C  0022               	movlb	2	; select bank2
  1143  003D  160E               	bsf	14,4	;volatile
  1144  003E  2841               	goto	l838
  1145  003F                     u390:	
  1146  003F  0022               	movlb	2	; select bank2
  1147  0040  120E               	bcf	14,4	;volatile
  1148  0041                     l838:	
  1149                           
  1150                           ;main.c: 72: LATCbits.LATC0 = boost_state;
  1151  0041  0C72               	rrf	_boost_state,w
  1152  0042  1C03               	skipc
  1153  0043  100E               	bcf	14,0	;volatile
  1154  0044  1803               	skipnc
  1155  0045  140E               	bsf	14,0	;volatile
  1156                           
  1157                           ;main.c: 73: LATCbits.LATC5 = boost_state;
  1158  0046  0C72               	rrf	_boost_state,w
  1159  0047  1C03               	skipc
  1160  0048  128E               	bcf	14,5	;volatile
  1161  0049  1803               	skipnc
  1162  004A  168E               	bsf	14,5	;volatile
  1163                           
  1164                           ;main.c: 77: LATAbits.LATA2 = 0;
  1165  004B  110C               	bcf	12,2	;volatile
  1166  004C                     l844:	
  1167                           ;main.c: 86: while (1) {
  1168                           
  1169                           
  1170                           ;main.c: 92: if (PORTAbits.RA4 == 0) {
  1171  004C  0020               	movlb	0	; select bank0
  1172  004D  1A0C               	btfsc	12,4	;volatile
  1173  004E  285E               	goto	l850
  1174                           
  1175                           ;main.c: 93: if (fuzz_pressed > 0) {
  1176  004F  0875               	movf	_fuzz_pressed+1,w
  1177  0050  3A80               	xorlw	128
  1178  0051  00F9               	movwf	??_main
  1179  0052  3080               	movlw	128
  1180  0053  0279               	subwf	??_main,w
  1181  0054  1D03               	skipz
  1182  0055  2858               	goto	u425
  1183  0056  3001               	movlw	1
  1184  0057  0274               	subwf	_fuzz_pressed,w
  1185  0058                     u425:	
  1186  0058  1C03               	skipc
  1187  0059  286E               	goto	l854
  1188                           
  1189                           ;main.c: 94: fuzz_pressed--;
  1190  005A  30FF               	movlw	255
  1191  005B  07F4               	addwf	_fuzz_pressed,f
  1192  005C  30FF               	movlw	255
  1193  005D  286D               	goto	L1
  1194  005E                     l850:	
  1195                           ;main.c: 95: }
  1196                           ;main.c: 96: } else if (fuzz_pressed < debounce_limit) {
  1197                           
  1198  005E  0875               	movf	_fuzz_pressed+1,w
  1199  005F  3A80               	xorlw	128
  1200  0060  00F9               	movwf	??_main
  1201  0061  087C               	movf	_debounce_limit+1,w
  1202  0062  3A80               	xorlw	128
  1203  0063  0279               	subwf	??_main,w
  1204  0064  1D03               	skipz
  1205  0065  2868               	goto	u435
  1206  0066  087B               	movf	_debounce_limit,w
  1207  0067  0274               	subwf	_fuzz_pressed,w
  1208  0068                     u435:	
  1209  0068  1803               	skipnc
  1210  0069  286E               	goto	l854
  1211                           
  1212                           ;main.c: 97: fuzz_pressed++;
  1213  006A  3001               	movlw	1
  1214  006B  07F4               	addwf	_fuzz_pressed,f
  1215  006C  3000               	movlw	0
  1216  006D                     L1:	
  1217  006D  3DF5               	addwfc	_fuzz_pressed+1,f
  1218  006E                     l854:	
  1219                           
  1220                           ;main.c: 99: }
  1221                           ;main.c: 106: if (fuzz_pressed == 0 ) {
  1222  006E  0874               	movf	_fuzz_pressed,w
  1223  006F  0475               	iorwf	_fuzz_pressed+1,w
  1224  0070  1D03               	btfss	3,2
  1225  0071  28CC               	goto	l892
  1226                           
  1227                           ;main.c: 108: fuzz_down++;
  1228  0072  3001               	movlw	1
  1229  0073  0020               	movlb	0	; select bank0
  1230  0074  07AE               	addwf	_fuzz_down,f
  1231  0075  3000               	movlw	0
  1232  0076  3DAF               	addwfc	_fuzz_down+1,f
  1233                           
  1234                           ;main.c: 109: if (fuzz_state == 1) {
  1235  0077  0376               	decf	_fuzz_state,w
  1236  0078  0477               	iorwf	_fuzz_state+1,w
  1237  0079  1D03               	btfss	3,2
  1238  007A  28A6               	goto	l878
  1239                           
  1240                           ;main.c: 110: if (fuzz_up == 1) {fuzz_toggle = 1; }
  1241  007B  0338               	decf	_fuzz_up,w
  1242  007C  0439               	iorwf	_fuzz_up+1,w
  1243  007D  1D03               	btfss	3,2
  1244  007E  2883               	goto	l95
  1245  007F  3001               	movlw	1
  1246  0080  00B0               	movwf	_fuzz_toggle
  1247  0081  3000               	movlw	0
  1248  0082  00B1               	movwf	_fuzz_toggle+1
  1249  0083                     l95:	
  1250                           
  1251                           ;main.c: 112: if (fuzz_down >= long_press_limit && feedback_on == 0 && fuzz_turning_on =
      +                          = 0) {
  1252  0083  082F               	movf	_fuzz_down+1,w
  1253  0084  3A80               	xorlw	128
  1254  0085  00F9               	movwf	??_main
  1255  0086  083B               	movf	_long_press_limit+1,w
  1256  0087  3A80               	xorlw	128
  1257  0088  0279               	subwf	??_main,w
  1258  0089  1D03               	skipz
  1259  008A  288D               	goto	u475
  1260  008B  083A               	movf	_long_press_limit,w
  1261  008C  022E               	subwf	_fuzz_down,w
  1262  008D                     u475:	
  1263  008D  1C03               	skipc
  1264  008E  28C8               	goto	l890
  1265  008F  0020               	movlb	0	; select bank0
  1266  0090  082A               	movf	_feedback_on,w
  1267  0091  042B               	iorwf	_feedback_on+1,w
  1268  0092  1D03               	btfss	3,2
  1269  0093  28C8               	goto	l890
  1270  0094  0832               	movf	_fuzz_turning_on,w
  1271  0095  0433               	iorwf	_fuzz_turning_on+1,w
  1272  0096  1D03               	btfss	3,2
  1273  0097  28C8               	goto	l890
  1274                           
  1275                           ;main.c: 114: fuzz_down = long_press_limit;
  1276  0098  083B               	movf	_long_press_limit+1,w
  1277  0099  00AF               	movwf	_fuzz_down+1
  1278  009A  083A               	movf	_long_press_limit,w
  1279  009B  00AE               	movwf	_fuzz_down
  1280                           
  1281                           ;main.c: 115: feedback_on = 1;
  1282  009C  3001               	movlw	1
  1283  009D  00AA               	movwf	_feedback_on
  1284  009E  3000               	movlw	0
  1285  009F  00AB               	movwf	_feedback_on+1
  1286                           
  1287                           ;main.c: 116: LATAbits.LATA2 = 0;
  1288  00A0  0022               	movlb	2	; select bank2
  1289  00A1  110C               	bcf	12,2	;volatile
  1290                           
  1291                           ;main.c: 117: LATCbits.LATC3 = 1;
  1292  00A2  158E               	bsf	14,3	;volatile
  1293                           
  1294                           ;main.c: 118: LATAbits.LATA0 = 1;
  1295  00A3  140C               	bsf	12,0	;volatile
  1296                           
  1297                           ;main.c: 119: LATAbits.LATA1 = 0;
  1298  00A4  108C               	bcf	12,1	;volatile
  1299                           
  1300                           ;main.c: 120: }
  1301                           ;main.c: 121: } else {
  1302  00A5  28C8               	goto	l890
  1303  00A6                     l878:	
  1304                           
  1305                           ;main.c: 123: fuzz_turning_on = 1;
  1306  00A6  3001               	movlw	1
  1307  00A7  0020               	movlb	0	; select bank0
  1308  00A8  00B2               	movwf	_fuzz_turning_on
  1309  00A9  3000               	movlw	0
  1310  00AA  00B3               	movwf	_fuzz_turning_on+1
  1311                           
  1312                           ;main.c: 124: fuzz_state = 1;
  1313  00AB  3001               	movlw	1
  1314  00AC  00F6               	movwf	_fuzz_state
  1315  00AD  3000               	movlw	0
  1316  00AE  00F7               	movwf	_fuzz_state+1
  1317                           
  1318                           ;main.c: 125: fuzz_toggle = 0;
  1319  00AF  01B0               	clrf	_fuzz_toggle
  1320  00B0  01B1               	clrf	_fuzz_toggle+1
  1321                           
  1322                           ;main.c: 126: LATAbits.LATA2 = fuzz_state;
  1323  00B1  0C76               	rrf	_fuzz_state,w
  1324  00B2  0022               	movlb	2	; select bank2
  1325  00B3  1C03               	skipc
  1326  00B4  110C               	bcf	12,2	;volatile
  1327  00B5  1803               	skipnc
  1328  00B6  150C               	bsf	12,2	;volatile
  1329                           
  1330                           ;main.c: 127: LATCbits.LATC1 = fuzz_state;
  1331  00B7  0C76               	rrf	_fuzz_state,w
  1332  00B8  1C03               	skipc
  1333  00B9  108E               	bcf	14,1	;volatile
  1334  00BA  1803               	skipnc
  1335  00BB  148E               	bsf	14,1	;volatile
  1336                           
  1337                           ;main.c: 128: LATCbits.LATC2 = !fuzz_state;
  1338  00BC  0876               	movf	_fuzz_state,w
  1339  00BD  0477               	iorwf	_fuzz_state+1,w
  1340  00BE  1D03               	btfss	3,2
  1341  00BF  28C3               	goto	u500
  1342  00C0  0022               	movlb	2	; select bank2
  1343  00C1  150E               	bsf	14,2	;volatile
  1344  00C2  28C5               	goto	l888
  1345  00C3                     u500:	
  1346  00C3  0022               	movlb	2	; select bank2
  1347  00C4  110E               	bcf	14,2	;volatile
  1348  00C5                     l888:	
  1349                           
  1350                           ;main.c: 129: feedback_on = 0;
  1351  00C5  0020               	movlb	0	; select bank0
  1352  00C6  01AA               	clrf	_feedback_on
  1353  00C7  01AB               	clrf	_feedback_on+1
  1354  00C8                     l890:	
  1355                           
  1356                           ;main.c: 130: }
  1357                           ;main.c: 138: fuzz_up = 0;
  1358  00C8  0020               	movlb	0	; select bank0
  1359  00C9  01B8               	clrf	_fuzz_up
  1360  00CA  01B9               	clrf	_fuzz_up+1
  1361                           
  1362                           ;main.c: 139: } else if (fuzz_pressed >= debounce_limit) {
  1363  00CB  290D               	goto	l914
  1364  00CC                     l892:	
  1365  00CC  0875               	movf	_fuzz_pressed+1,w
  1366  00CD  3A80               	xorlw	128
  1367  00CE  00F9               	movwf	??_main
  1368  00CF  087C               	movf	_debounce_limit+1,w
  1369  00D0  3A80               	xorlw	128
  1370  00D1  0279               	subwf	??_main,w
  1371  00D2  1D03               	skipz
  1372  00D3  28D6               	goto	u525
  1373  00D4  087B               	movf	_debounce_limit,w
  1374  00D5  0274               	subwf	_fuzz_pressed,w
  1375  00D6                     u525:	
  1376  00D6  1C03               	skipc
  1377  00D7  290D               	goto	l914
  1378                           
  1379                           ;main.c: 142: LATCbits.LATC3 = 0;
  1380  00D8  0022               	movlb	2	; select bank2
  1381  00D9  118E               	bcf	14,3	;volatile
  1382                           
  1383                           ;main.c: 143: LATAbits.LATA0 = 0;
  1384  00DA  100C               	bcf	12,0	;volatile
  1385                           
  1386                           ;main.c: 144: LATAbits.LATA1 = 1;
  1387  00DB  148C               	bsf	12,1	;volatile
  1388                           
  1389                           ;main.c: 145: if (fuzz_toggle == 1 && feedback_on == 0) {
  1390  00DC  0020               	movlb	0	; select bank0
  1391  00DD  0330               	decf	_fuzz_toggle,w
  1392  00DE  0431               	iorwf	_fuzz_toggle+1,w
  1393  00DF  1D03               	btfss	3,2
  1394  00E0  28F6               	goto	l904
  1395  00E1  082A               	movf	_feedback_on,w
  1396  00E2  042B               	iorwf	_feedback_on+1,w
  1397  00E3  1D03               	btfss	3,2
  1398  00E4  28F6               	goto	l904
  1399                           
  1400                           ;main.c: 146: fuzz_state = 0;
  1401  00E5  01F6               	clrf	_fuzz_state
  1402  00E6  01F7               	clrf	_fuzz_state+1
  1403                           
  1404                           ;main.c: 148: LATCbits.LATC1 = fuzz_state;
  1405  00E7  0C76               	rrf	_fuzz_state,w
  1406  00E8  0022               	movlb	2	; select bank2
  1407  00E9  1C03               	skipc
  1408  00EA  108E               	bcf	14,1	;volatile
  1409  00EB  1803               	skipnc
  1410  00EC  148E               	bsf	14,1	;volatile
  1411                           
  1412                           ;main.c: 149: LATCbits.LATC2 = !fuzz_state;
  1413  00ED  0876               	movf	_fuzz_state,w
  1414  00EE  0477               	iorwf	_fuzz_state+1,w
  1415  00EF  1D03               	btfss	3,2
  1416  00F0  28F4               	goto	u550
  1417  00F1  0022               	movlb	2	; select bank2
  1418  00F2  150E               	bsf	14,2	;volatile
  1419  00F3  28F6               	goto	l904
  1420  00F4                     u550:	
  1421  00F4  0022               	movlb	2	; select bank2
  1422  00F5  110E               	bcf	14,2	;volatile
  1423  00F6                     l904:	
  1424                           
  1425                           ;main.c: 150: }
  1426                           ;main.c: 151: LATAbits.LATA2 = fuzz_state;
  1427  00F6  0C76               	rrf	_fuzz_state,w
  1428  00F7  0022               	movlb	2	; select bank2
  1429  00F8  1C03               	skipc
  1430  00F9  110C               	bcf	12,2	;volatile
  1431  00FA  1803               	skipnc
  1432  00FB  150C               	bsf	12,2	;volatile
  1433                           
  1434                           ;main.c: 152: fuzz_turning_on = 0;
  1435  00FC  0020               	movlb	0	; select bank0
  1436  00FD  01B2               	clrf	_fuzz_turning_on
  1437  00FE  01B3               	clrf	_fuzz_turning_on+1
  1438                           
  1439                           ;main.c: 153: fuzz_toggle = 0;
  1440  00FF  01B0               	clrf	_fuzz_toggle
  1441  0100  01B1               	clrf	_fuzz_toggle+1
  1442                           
  1443                           ;main.c: 154: fuzz_up = 1;
  1444  0101  3001               	movlw	1
  1445  0102  00B8               	movwf	_fuzz_up
  1446  0103  3000               	movlw	0
  1447  0104  00B9               	movwf	_fuzz_up+1
  1448                           
  1449                           ;main.c: 155: fuzz_down = 0;
  1450  0105  01AE               	clrf	_fuzz_down
  1451  0106  01AF               	clrf	_fuzz_down+1
  1452                           
  1453                           ;main.c: 156: feedback_on = 0;
  1454  0107  01AA               	clrf	_feedback_on
  1455  0108  01AB               	clrf	_feedback_on+1
  1456                           
  1457                           ;main.c: 157: fuzz_pressed = debounce_limit;
  1458  0109  087C               	movf	_debounce_limit+1,w
  1459  010A  00F5               	movwf	_fuzz_pressed+1
  1460  010B  087B               	movf	_debounce_limit,w
  1461  010C  00F4               	movwf	_fuzz_pressed
  1462  010D                     l914:	
  1463                           
  1464                           ;main.c: 158: }
  1465                           ;main.c: 165: if (PORTAbits.RA5 == 0) {
  1466  010D  0020               	movlb	0	; select bank0
  1467  010E  1A8C               	btfsc	12,5	;volatile
  1468  010F  291F               	goto	l920
  1469                           
  1470                           ;main.c: 166: if (boost_pressed > 0) {
  1471  0110  0871               	movf	_boost_pressed+1,w
  1472  0111  3A80               	xorlw	128
  1473  0112  00F9               	movwf	??_main
  1474  0113  3080               	movlw	128
  1475  0114  0279               	subwf	??_main,w
  1476  0115  1D03               	skipz
  1477  0116  2919               	goto	u585
  1478  0117  3001               	movlw	1
  1479  0118  0270               	subwf	_boost_pressed,w
  1480  0119                     u585:	
  1481  0119  1C03               	skipc
  1482  011A  292F               	goto	l924
  1483                           
  1484                           ;main.c: 167: boost_pressed--;
  1485  011B  30FF               	movlw	255
  1486  011C  07F0               	addwf	_boost_pressed,f
  1487  011D  30FF               	movlw	255
  1488  011E  292E               	goto	L2
  1489  011F                     l920:	
  1490                           ;main.c: 169: }
  1491                           ;main.c: 170: } else if (boost_pressed < debounce_limit) {
  1492                           
  1493  011F  0871               	movf	_boost_pressed+1,w
  1494  0120  3A80               	xorlw	128
  1495  0121  00F9               	movwf	??_main
  1496  0122  087C               	movf	_debounce_limit+1,w
  1497  0123  3A80               	xorlw	128
  1498  0124  0279               	subwf	??_main,w
  1499  0125  1D03               	skipz
  1500  0126  2929               	goto	u595
  1501  0127  087B               	movf	_debounce_limit,w
  1502  0128  0270               	subwf	_boost_pressed,w
  1503  0129                     u595:	
  1504  0129  1803               	skipnc
  1505  012A  292F               	goto	l924
  1506                           
  1507                           ;main.c: 171: boost_pressed++;
  1508  012B  3001               	movlw	1
  1509  012C  07F0               	addwf	_boost_pressed,f
  1510  012D  3000               	movlw	0
  1511  012E                     L2:	
  1512  012E  3DF1               	addwfc	_boost_pressed+1,f
  1513  012F                     l924:	
  1514                           
  1515                           ;main.c: 173: }
  1516                           ;main.c: 180: if (boost_pressed == 0) {
  1517  012F  0870               	movf	_boost_pressed,w
  1518  0130  0471               	iorwf	_boost_pressed+1,w
  1519  0131  1D03               	btfss	3,2
  1520  0132  2964               	goto	l938
  1521                           
  1522                           ;main.c: 182: boost_down = 1;
  1523  0133  3001               	movlw	1
  1524  0134  0020               	movlb	0	; select bank0
  1525  0135  00A4               	movwf	_boost_down
  1526  0136  3000               	movlw	0
  1527  0137  00A5               	movwf	_boost_down+1
  1528                           
  1529                           ;main.c: 183: if (boost_up == 1) {
  1530  0138  0336               	decf	_boost_up,w
  1531  0139  0437               	iorwf	_boost_up+1,w
  1532  013A  1D03               	btfss	3,2
  1533  013B  2960               	goto	l936
  1534                           
  1535                           ;main.c: 184: boost_state = !boost_state;
  1536  013C  0872               	movf	_boost_state,w
  1537  013D  0473               	iorwf	_boost_state+1,w
  1538  013E  1D03               	btfss	3,2
  1539  013F  2942               	goto	u620
  1540  0140  3001               	movlw	1
  1541  0141  2943               	goto	u630
  1542  0142                     u620:	
  1543  0142  3000               	movlw	0
  1544  0143                     u630:	
  1545  0143  00F9               	movwf	??_main
  1546  0144  01FA               	clrf	??_main+1
  1547  0145  0879               	movf	??_main,w
  1548  0146  00F2               	movwf	_boost_state
  1549  0147  087A               	movf	??_main+1,w
  1550  0148  00F3               	movwf	_boost_state+1
  1551                           
  1552                           ;main.c: 185: LATCbits.LATC5 = !boost_state;
  1553  0149  0872               	movf	_boost_state,w
  1554  014A  0473               	iorwf	_boost_state+1,w
  1555  014B  1D03               	btfss	3,2
  1556  014C  2950               	goto	u640
  1557  014D  0022               	movlb	2	; select bank2
  1558  014E  168E               	bsf	14,5	;volatile
  1559  014F  2952               	goto	l932
  1560  0150                     u640:	
  1561  0150  0022               	movlb	2	; select bank2
  1562  0151  128E               	bcf	14,5	;volatile
  1563  0152                     l932:	
  1564                           
  1565                           ;main.c: 186: LATCbits.LATC4 = boost_state;
  1566  0152  0C72               	rrf	_boost_state,w
  1567  0153  1C03               	skipc
  1568  0154  120E               	bcf	14,4	;volatile
  1569  0155  1803               	skipnc
  1570  0156  160E               	bsf	14,4	;volatile
  1571                           
  1572                           ;main.c: 187: LATCbits.LATC0 = !boost_state;
  1573  0157  0872               	movf	_boost_state,w
  1574  0158  0473               	iorwf	_boost_state+1,w
  1575  0159  1D03               	btfss	3,2
  1576  015A  295E               	goto	u660
  1577  015B  0022               	movlb	2	; select bank2
  1578  015C  140E               	bsf	14,0	;volatile
  1579  015D  2960               	goto	l936
  1580  015E                     u660:	
  1581  015E  0022               	movlb	2	; select bank2
  1582  015F  100E               	bcf	14,0	;volatile
  1583  0160                     l936:	
  1584                           
  1585                           ;main.c: 188: }
  1586                           ;main.c: 189: boost_up = 0;
  1587  0160  0020               	movlb	0	; select bank0
  1588  0161  01B6               	clrf	_boost_up
  1589  0162  01B7               	clrf	_boost_up+1
  1590                           
  1591                           ;main.c: 190: } else if (boost_pressed >= debounce_limit) {
  1592  0163  284C               	goto	l844
  1593  0164                     l938:	
  1594  0164  0871               	movf	_boost_pressed+1,w
  1595  0165  3A80               	xorlw	128
  1596  0166  00F9               	movwf	??_main
  1597  0167  087C               	movf	_debounce_limit+1,w
  1598  0168  3A80               	xorlw	128
  1599  0169  0279               	subwf	??_main,w
  1600  016A  1D03               	skipz
  1601  016B  296E               	goto	u685
  1602  016C  087B               	movf	_debounce_limit,w
  1603  016D  0270               	subwf	_boost_pressed,w
  1604  016E                     u685:	
  1605  016E  1C03               	skipc
  1606  016F  284C               	goto	l844
  1607                           
  1608                           ;main.c: 192: boost_up = 1;
  1609  0170  3001               	movlw	1
  1610  0171  0020               	movlb	0	; select bank0
  1611  0172  00B6               	movwf	_boost_up
  1612  0173  3000               	movlw	0
  1613  0174  00B7               	movwf	_boost_up+1
  1614                           
  1615                           ;main.c: 193: boost_down = 0;
  1616  0175  01A4               	clrf	_boost_down
  1617  0176  01A5               	clrf	_boost_down+1
  1618                           
  1619                           ;main.c: 194: boost_pressed = debounce_limit;
  1620  0177  087C               	movf	_debounce_limit+1,w
  1621  0178  00F1               	movwf	_boost_pressed+1
  1622  0179  087B               	movf	_debounce_limit,w
  1623  017A  00F0               	movwf	_boost_pressed
  1624  017B  284C               	goto	l844
  1625  017C                     __end_of_main:	
  1626                           
  1627                           	psect	text1
  1628  017C                     __ptext1:	
  1629 ;; *************** function _InitApp *****************
  1630 ;; Defined at:
  1631 ;;		line 27 in file "user.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0, pclath, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1
  1645 ;;      Params:         0       0       0
  1646 ;;      Locals:         0       0       0
  1647 ;;      Temps:          0       0       0
  1648 ;;      Totals:         0       0       0
  1649 ;;Total ram usage:        0 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    2
  1652 ;; This function calls:
  1653 ;;		_init_adc
  1654 ;; This function is called by:
  1655 ;;		_main
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function _InitApp
  1661  017C                     _InitApp:	
  1662                           
  1663                           ;user.c: 28: TRISAbits.TRISA0 = 0;
  1664                           
  1665                           ;incstack = 0
  1666                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
  1667  017C  0021               	movlb	1	; select bank1
  1668  017D  100C               	bcf	12,0	;volatile
  1669                           
  1670                           ;user.c: 29: TRISAbits.TRISA1 = 0;
  1671  017E  108C               	bcf	12,1	;volatile
  1672                           
  1673                           ;user.c: 31: TRISAbits.TRISA2 = 0;
  1674  017F  110C               	bcf	12,2	;volatile
  1675                           
  1676                           ;user.c: 32: TRISAbits.TRISA4 = 1;
  1677  0180  160C               	bsf	12,4	;volatile
  1678                           
  1679                           ;user.c: 33: TRISAbits.TRISA5 = 1;
  1680  0181  168C               	bsf	12,5	;volatile
  1681                           
  1682                           ;user.c: 34: ANSELAbits.ANSA4 = 0;
  1683  0182  0023               	movlb	3	; select bank3
  1684  0183  120C               	bcf	12,4	;volatile
  1685                           
  1686                           ;user.c: 36: TRISCbits.TRISC0 = 0;
  1687  0184  0021               	movlb	1	; select bank1
  1688  0185  100E               	bcf	14,0	;volatile
  1689                           
  1690                           ;user.c: 37: TRISCbits.TRISC1 = 0;
  1691  0186  108E               	bcf	14,1	;volatile
  1692                           
  1693                           ;user.c: 38: TRISCbits.TRISC2 = 0;
  1694  0187  110E               	bcf	14,2	;volatile
  1695                           
  1696                           ;user.c: 39: TRISCbits.TRISC3 = 0;
  1697  0188  118E               	bcf	14,3	;volatile
  1698                           
  1699                           ;user.c: 40: TRISCbits.TRISC4 = 0;
  1700  0189  120E               	bcf	14,4	;volatile
  1701                           
  1702                           ;user.c: 41: TRISCbits.TRISC5 = 0;
  1703  018A  128E               	bcf	14,5	;volatile
  1704                           
  1705                           ;user.c: 43: init_adc();
  1706  018B  218D               	fcall	_init_adc
  1707  018C  0008               	return
  1708  018D                     __end_of_InitApp:	
  1709                           
  1710                           	psect	text2
  1711  018D                     __ptext2:	
  1712 ;; *************** function _init_adc *****************
  1713 ;; Defined at:
  1714 ;;		line 55 in file "user.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1
  1728 ;;      Params:         0       0       0
  1729 ;;      Locals:         0       0       0
  1730 ;;      Temps:          0       0       0
  1731 ;;      Totals:         0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_InitApp
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           
  1743                           ;psect for function _init_adc
  1744  018D                     _init_adc:	
  1745                           
  1746                           ;user.c: 56: ADCON1bits.ADFM = 0b1;
  1747                           
  1748                           ;incstack = 0
  1749                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  1750  018D  0021               	movlb	1	; select bank1
  1751  018E  179E               	bsf	30,7	;volatile
  1752                           
  1753                           ;user.c: 57: ADCON1bits.ADCS = 0b110;
  1754  018F  081E               	movf	30,w	;volatile
  1755  0190  398F               	andlw	-113
  1756  0191  3860               	iorlw	96
  1757  0192  009E               	movwf	30	;volatile
  1758                           
  1759                           ;user.c: 58: ADCON1bits.ADPREF = 0b00;
  1760  0193  30FC               	movlw	-4
  1761  0194  059E               	andwf	30,f	;volatile
  1762                           
  1763                           ;user.c: 59: ADCON0bits.ADON = 0b1;
  1764  0195  141D               	bsf	29,0	;volatile
  1765  0196  0008               	return
  1766  0197                     __end_of_init_adc:	
  1767                           
  1768                           	psect	text3
  1769  01A3                     __ptext3:	
  1770 ;; *************** function _ConfigureOscillator *****************
  1771 ;; Defined at:
  1772 ;;		line 17 in file "system.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1
  1786 ;;      Params:         0       0       0
  1787 ;;      Locals:         0       0       0
  1788 ;;      Temps:          0       0       0
  1789 ;;      Totals:         0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function _ConfigureOscillator
  1802  01A3                     _ConfigureOscillator:	
  1803                           
  1804                           ;system.c: 19: OSCCONbits.IRCF = 0b1111;
  1805                           
  1806                           ;incstack = 0
  1807                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  1808  01A3  3078               	movlw	120
  1809  01A4  0021               	movlb	1	; select bank1
  1810  01A5  0499               	iorwf	25,f	;volatile
  1811                           
  1812                           ;system.c: 20: OSCSTAT = 0x00;
  1813  01A6  019A               	clrf	26	;volatile
  1814  01A7  0008               	return
  1815  01A8                     __end_of_ConfigureOscillator:	
  1816                           
  1817                           	psect	intentry
  1818  0004                     __pintentry:	
  1819 ;; *************** function _isr *****************
  1820 ;; Defined at:
  1821 ;;		line 23 in file "interrupts.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;		None
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		None
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1
  1835 ;;      Params:         0       0       0
  1836 ;;      Locals:         0       0       0
  1837 ;;      Temps:          1       0       0
  1838 ;;      Totals:         1       0       0
  1839 ;;Total ram usage:        1 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		Interrupt level 1
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848  0004                     _isr:	
  1849                           
  1850                           ;incstack = 0
  1851                           ; Regs used in _isr: []
  1852  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1853  0005  3180               	pagesel	$
  1854  0006  0020               	movlb	0	; select bank0
  1855  0007  087F               	movf	127,w
  1856  0008  00F8               	movwf	??_isr
  1857  0009  0878               	movf	??_isr,w
  1858  000A  00FF               	movwf	127
  1859  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1860  000C  0009               	retfie
  1861  000D                     __end_of_isr:	
  1862  007E                     btemp	set	126	;btemp
  1863  007E                     int$flags	set	126
  1864  007E                     wtemp	set	126
  1865  007E                     wtemp0	set	126
  1866  0080                     wtemp1	set	128
  1867  0082                     wtemp2	set	130
  1868  0084                     wtemp3	set	132
  1869  0086                     wtemp4	set	134
  1870  0088                     wtemp5	set	136
  1871  007F                     wtemp6	set	127
  1872  007E                     ttemp	set	126
  1873  007E                     ttemp0	set	126
  1874  0081                     ttemp1	set	129
  1875  0084                     ttemp2	set	132
  1876  0087                     ttemp3	set	135
  1877  007F                     ttemp4	set	127
  1878  007E                     ltemp	set	126
  1879  007E                     ltemp0	set	126
  1880  0082                     ltemp1	set	130
  1881  0086                     ltemp2	set	134
  1882  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      13
    BANK0            80      0      28
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              1 COMMON     2     2      0
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                           _init_adc
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _init_adc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      29       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      1C       6       35.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      29       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Aug 01 19:43:59 2016

                 __CFG_CP$OFF 0000                            l95 0083                   __CFG_LVP$ON 0000  
                         l920 011F                           l904 00F6                           l914 010D  
                         l850 005E                           l932 0152                           l924 012F  
                         l844 004C                           l854 006E                           l838 0041  
                         l936 0160                           l938 0164                           l890 00C8  
                         l892 00CC                           l878 00A6                           l888 00C5  
                         u500 00C3                           u425 0058                           u435 0068  
                         u620 0142                           u525 00D6                           u630 0143  
                         u550 00F4                           u390 003F                           u640 0150  
                         u475 008D                           u660 015E                           u585 0119  
                         u595 0129                           u685 016E                           _isr 0004  
                __CFG_BORV$LO 0000                           wreg 0009                 _boost_pressed 0070  
                        ?_isr 0078                  __CFG_WRT$OFF 0000                          _main 0031  
                        fsr0h 0005                          fsr0l 0004                          indf0 0000  
                        btemp 007E                          ltemp 007E                          start 000D  
                        ttemp 007E                          wtemp 007E                 __CFG_MCLRE$ON 0000  
             __end_of_InitApp 018D                         ??_isr 0078                         ?_main 0078  
               __CFG_WDTE$OFF 0000           _ConfigureOscillator 01A3                __CFG_BOREN$OFF 0000  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F          ?_ConfigureOscillator 0078  
             __initialization 000E                  __end_of_main 017C                __CFG_LPBOR$OFF 0000  
                      ??_main 0079                _feedback_state 002C                        _ADRESH 009C  
                      _ADRESL 009B                        _PMADRH 0192                        _PMADRL 0191  
                      _PMDATH 0194                        _PMDATL 0193                        _PMCON2 0196  
              _debounce_limit 007B                     ??_InitApp 0079         ??_ConfigureOscillator 0079  
              __CFG_PWRTE$OFF 0000                __CFG_STVREN$ON 0000              __end_of_init_adc 0197  
                __pdataCOMMON 007B       __end_of__initialization 002E                __pcstackCOMMON 0078  
                __pidataBANK0 0197                    __pbssBANK0 0020              _long_press_limit 003A  
                  __pmaintext 0031                    __pintentry 0004                       _OSCSTAT 009A  
                  _boost_down 0024                     ?_init_adc 0078                       _InitApp 017C  
                     __ptext1 017C                       __ptext2 018D                       __ptext3 01A3  
                   _T2CONbits 001C                  __size_of_isr 0009                       _fuzz_up 0038  
                     clrloop0 019E          end_of_initialization 002E                    ??_init_adc 0079  
                  _fuzz_state 0076                     _PORTAbits 000C              __CFG_FOSC$INTOSC 0000  
                   _TRISAbits 008C                     _TRISCbits 008E   __end_of_ConfigureOscillator 01A8  
               __pidataCOMMON 01A8           start_initialization 000E                   __end_of_isr 000D  
                 __pdataBANK0 0036                   __pbssCOMMON 0070                     ___latbits 0000  
                 _feedback_on 002A                      ?_InitApp 0078             __size_of_init_adc 000A  
                    _LATAbits 010C                      _LATCbits 010E                     clear_ram0 019D  
                   _fuzz_down 002E                      _PIR1bits 0011                    _ADCON0bits 009D  
                  _ADCON1bits 009E                   _boost_state 0072              __size_of_InitApp 0011  
                  _ANSELAbits 018C                      _boost_up 0036                  _fuzz_pressed 0074  
                    _init_adc 018D                 __size_of_main 014B  __size_of_ConfigureOscillator 0005  
                    int$flags 007E               _fuzz_turning_on 0032              _last_boost_state 0034  
        _debounce_count_boost 0026                    _INTCONbits 000B                      intlevel1 0000  
                  _PMCON1bits 0195             __CFG_CLKOUTEN$OFF 0000                   _fuzz_toggle 0030  
                  _OSCCONbits 0099           _debounce_count_fuzz 0028                  wait_ms@timel 0020  
